include:
  - template: Terraform.latest.gitlab-ci.yml

variables:
  TF_STATE_NAME: "dev"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build_artifact:
  image: gradle:alpine
  stage: build
  script: 
    - gradle --build-cache assemble
    - echo "TF_VAR_BUILD_FILENAME=$(gradle -q builtArchive)" >> build.env
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - build/libs/*.jar

test:
  image: gradle:alpine
  stage: test
  script: gradle check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

.terraform:build:
  needs: ["build_artifact"]

.terraform:deploy:
  needs: ["build", "build_artifact"]
  script:
    - cd ${TF_ROOT}
    - ls
    - gitlab-terraform apply
  rules:
    - when: on_success
