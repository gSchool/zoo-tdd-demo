include:
  - template: Terraform.latest.gitlab-ci.yml

stages:
  - validate
  - test
  - build
  - deploy
  - cleanup

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

assemble:
  image: gradle:alpine
  stage: build
  script:
    - gradle --build-cache assemble
    - echo "TF_VAR_BUILD_FILENAME=$(gradle -q builtArchive)" >> build.env
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - build/libs/*.jar

test:
  image: gradle:alpine
  stage: test
  script: gradle check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

.terraform:build:
  needs: ["assemble"]
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - build/libs/*.jar
      - ${TF_ROOT}/plan.cache

.terraform:deploy:
  needs: ["build", "assemble"]
  rules:
    - when: on_success
  artifacts:
    paths:
      - terraform.tfstate
  allow_failure: true

.terraform:destroy:
  dependencies:
    - deploy
    - assemble
  rules:
    - when: manual
